#ifndef PP2_LANGUAGE_COMPILER_H
#define PP2_LANGUAGE_COMPILER_H

#include "pp2/machine/exception/throw.h"

#include "pp2/primitive/seq/head.h"
#include "pp2/primitive/tuple/eat.h"
#include "pp2/primitive/tuple/at.h"

#define PP2_COMPILE(stx) IP2_LANGUAGE_COMPILE_CHOOSE_EVAL_OR_QUOTE(IP2_LANGUAGE_COMPILE_TEST_IF_QUOTE stx)(stx)
#define IP2_LANGUAGE_COMPILE_CHOOSE_EVAL_OR_QUOTE(x) PP2_TUPLE_AT_2(IP2_LANGUAGE_COMPILE,x,_QUOTE,)
#define IP2_LANGUAGE_COMPILE_TEST_IF_QUOTE(...) ,

#define IP2_LANGUAGE_COMPILE(stx) IP2_LANGUAGE_COMPILE_I(((8PP2_THROW_EXCEPTION,8PP2_LANGUAGE_DEFINITION_EXCEPTION,stx),PP2_DEF_##stx))
#define IP2_LANGUAGE_COMPILE_I(tup) IP2_LANGUAGE_COMPILE_II tup
#define IP2_LANGUAGE_COMPILE_II(fail_cont,x) IP2_LANGUAGE_COMPILE_III(IP2_LANGUAGE_COMPILE_TEST_SUCCESS_##x,IP2_LANGUAGE_COMPILE_FAIL,) fail_cont
#define IP2_LANGUAGE_COMPILE_III(...) PP2_TUPLE_AT_1(,__VA_ARGS__)
#define IP2_LANGUAGE_COMPILE_TEST_SUCCESS_ ,PP2_EAT,
#define IP2_LANGUAGE_COMPILE_FAIL(...) __VA_ARGS__

#define IP2_LANGUAGE_COMPILE_QUOTE(tok_tup) IP2_LANGUAGE_COMPILE_QUOTE_I tok_tup)
#define IP2_LANGUAGE_COMPILE_QUOTE_I(...) 8PP2_LOAD_CONST,(,Quote,(__VA_ARGS__)),PP2_COMPILE_LANGUAGE_RETURN(


#define PP2_COMPILE_UNSAFE(stx) IP2_LANGUAGE_COMPILE_UNSAFE((PP2_DEF_##stx))
#define IP2_LANGUAGE_COMPILE_UNSAFE(x) PP2_EAT x


#define PP2_COMPILE_OR_DEFAULT(stx,default) IP2_LANGUAGE_COMPILE_I((default,PP2_DEF_##stx))


#define PP2_INSN_8PP2_LANGUAGE_COMPILE(P,r0,r1,r2,stx,...) (,P##r0,P##r1,P##r2,PP2_COMPILE(P##stx),P##__VA_ARGS__)
#define PP2_INSN_8PP2_LANGUAGE_COMPILE_UNSAFE(P,r0,r1,r2,stx,...) (,P##r0,P##r1,P##r2,PP2_COMPILE_UNSAFE(P##stx),P##__VA_ARGS__)
#define PP2_INSN_8PP2_LANGUAGE_COMPILE_OR_DEFAULT(P,r0,r1,r2,stx,default,...) (,P##r0,P##r1,P##r2,PP2_COMPILE_OR_DEFAULT(P##stx,P##default),P##__VA_ARGS__)

#endif