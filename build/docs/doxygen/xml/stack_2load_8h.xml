<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="stack_2load_8h" kind="file" language="C++">
    <compoundname>load.h</compoundname>
    <includes refid="load__tables_8h" local="yes">pp2/machine/stack/detail/load_tables.h</includes>
    <includes refid="invoke_8h" local="yes">pp2/primitive/basic/invoke.h</includes>
    <includes refid="at_8h" local="yes">pp2/primitive/tuple/at.h</includes>
    <includedby refid="variable_8h" local="yes">/github/workspace/include/pp2/language/basic/variable.h</includedby>
    <includedby refid="machine_8h" local="yes">/github/workspace/include/pp2/machine.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>pp2/machine/stack/detail/load_tables.h</label>
        <link refid="load__tables_8h"/>
      </node>
      <node id="1">
        <label>/github/workspace/include/pp2/machine/stack/load.h</label>
        <link refid="stack_2load_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>pp2/primitive/basic/invoke.h</label>
        <link refid="invoke_8h"/>
      </node>
      <node id="4">
        <label>pp2/primitive/tuple/at.h</label>
        <link refid="at_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/github/workspace/include/pp2/language.h</label>
        <link refid="language_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/github/workspace/include/pp2/language/basic/variable.h</label>
        <link refid="variable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/github/workspace/include/pp2/machine.h</label>
        <link refid="machine_8h_source"/>
      </node>
      <node id="1">
        <label>/github/workspace/include/pp2/machine/stack/load.h</label>
        <link refid="stack_2load_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/github/workspace/include/pp2/pp2.h</label>
        <link refid="pp2_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="stack_2load_8h_1a6bc94c5fbb863fc0f7a3a4c4225a1038" prot="public" static="no">
        <name>PP2_INSN_8PP2_STACK_LOAD</name>
        <param><defname>P</defname></param>
        <param><defname>r0</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>addr</defname></param>
        <param><defname>...</defname></param>
        <initializer>                                (, \
                                    /*r0=*/IP2_FX(STACK_FRAME_LOAD, (,P##addr,IP2_STACK_LOAD_SPLIT_FRAME P##r1)), \
                                    P##r1,P##r2, \
                                    P##__VA_ARGS__ \
                                )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/machine/stack/load.h" line="10" column="9" bodyfile="/github/workspace/include/pp2/machine/stack/load.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stack_2load_8h_1a0cd91cb45afb80b732b77bfc04d150d7" prot="public" static="no">
        <name>IP2_STACK_FRAME_LOAD</name>
        <param><defname>P</defname></param>
        <param><defname>addr</defname></param>
        <param><defname>frame</defname></param>
        <param><defname>frame_stack</defname></param>
        <initializer>IP2_STACK_FRAME_LOAD_I(P##addr,PP2_STACK_FRAME_LOAD_UP_##addr P##frame)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/machine/stack/load.h" line="17" column="9" bodyfile="/github/workspace/include/pp2/machine/stack/load.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stack_2load_8h_1a075fc892e900c112f4f88ce9c7f8ee0f" prot="public" static="no">
        <name>IP2_STACK_FRAME_LOAD_I</name>
        <param><defname>addr</defname></param>
        <param><defname>x</defname></param>
        <initializer>PP2_TUPLE_AT_1(,x,IP2_STACK_FRAME_LOAD_UNBOUND(,addr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/machine/stack/load.h" line="18" column="9" bodyfile="/github/workspace/include/pp2/machine/stack/load.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stack_2load_8h_1a38251096472d26ac222d45bbd28bcec1" prot="public" static="no">
        <name>IP2_STACK_LOAD_SPLIT_FRAME</name>
        <param><defname>P</defname></param>
        <param><defname>stack</defname></param>
        <param><defname>...</defname></param>
        <initializer>IP2_STACK_LOAD_SPLIT_FRAME_I P##stack</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/machine/stack/load.h" line="20" column="9" bodyfile="/github/workspace/include/pp2/machine/stack/load.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stack_2load_8h_1af47c9736236d537952664e776e5b7d28" prot="public" static="no">
        <name>IP2_STACK_LOAD_SPLIT_FRAME_I</name>
        <param><defname>...</defname></param>
        <initializer>__VA_ARGS__,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/machine/stack/load.h" line="21" column="9" bodyfile="/github/workspace/include/pp2/machine/stack/load.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stack_2load_8h_1a3f8f814e1e4e7339e6520d01209c750b" prot="public" static="no">
        <name>IP2_STACK_FRAME_LOAD_UNBOUND</name>
        <param><defname>P</defname></param>
        <param><defname>addr</defname></param>
        <initializer>/*r0=*/,/*r1=*/,/*r2=*/,8PP2_STACK_FRAME_LOAD_UNBOUND,P##addr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/machine/stack/load.h" line="23" column="9" bodyfile="/github/workspace/include/pp2/machine/stack/load.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stack_2load_8h_1a87f3516265a9c5025c999fd37af42222" prot="public" static="no">
        <name>PP2_INSN_8PP2_STACK_FRAME_LOAD_UNBOUND</name>
        <param><defname>P</defname></param>
        <param><defname>_0</defname></param>
        <param><defname>_1</defname></param>
        <param><defname>_2</defname></param>
        <param><defname>addr</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>...</defname></param>
        <initializer>(,P##r0,P##r1,P##r2,8PP2_THROW_EXCEPTION,8PP2_LANGUAGE_UNBOUND_LOCAL_EXCEPTION,P##addr,P##__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/machine/stack/load.h" line="24" column="9" bodyfile="/github/workspace/include/pp2/machine/stack/load.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PP2_MACHINE_STACK_LOAD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_MACHINE_STACK_LOAD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="load__tables_8h" kindref="compound">pp2/machine/stack/detail/load_tables.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="invoke_8h" kindref="compound">pp2/primitive/basic/invoke.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="at_8h" kindref="compound">pp2/primitive/tuple/at.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_INSN_8PP2_STACK_LOAD(P,r0,r1,r2,addr,...)<sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(,<sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*r0=*/</highlight><highlight class="preprocessor">IP2_FX(STACK_FRAME_LOAD,<sp/>(,P##addr,IP2_STACK_LOAD_SPLIT_FRAME<sp/>P##r1)),<sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P##r1,P##r2,<sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P##__VA_ARGS__<sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_STACK_FRAME_LOAD(P,addr,frame,frame_stack)<sp/>IP2_STACK_FRAME_LOAD_I(P##addr,PP2_STACK_FRAME_LOAD_UP_##addr<sp/>P##frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_STACK_FRAME_LOAD_I(addr,x)<sp/>PP2_TUPLE_AT_1(,x,IP2_STACK_FRAME_LOAD_UNBOUND(,addr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_STACK_LOAD_SPLIT_FRAME(P,stack,...)<sp/>IP2_STACK_LOAD_SPLIT_FRAME_I<sp/>P##stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_STACK_LOAD_SPLIT_FRAME_I(...)<sp/>__VA_ARGS__,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_STACK_FRAME_LOAD_UNBOUND(P,addr)<sp/></highlight><highlight class="comment">/*r0=*/</highlight><highlight class="preprocessor">,</highlight><highlight class="comment">/*r1=*/</highlight><highlight class="preprocessor">,</highlight><highlight class="comment">/*r2=*/</highlight><highlight class="preprocessor">,8PP2_STACK_FRAME_LOAD_UNBOUND,P##addr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_INSN_8PP2_STACK_FRAME_LOAD_UNBOUND(P,_0,_1,_2,addr,r1,r2,...)<sp/>(,P##r0,P##r1,P##r2,8PP2_THROW_EXCEPTION,8PP2_LANGUAGE_UNBOUND_LOCAL_EXCEPTION,P##addr,P##__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/github/workspace/include/pp2/machine/stack/load.h"/>
  </compounddef>
</doxygen>
