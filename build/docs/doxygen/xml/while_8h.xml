<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="while_8h" kind="file" language="C++">
    <compoundname>while.h</compoundname>
    <includes refid="compiler_8h" local="yes">pp2/language/compiler.h</includes>
    <includes refid="block_8h" local="yes">pp2/language/basic/block.h</includes>
    <includes refid="goto_8h" local="yes">pp2/machine/goto/goto.h</includes>
    <includes refid="label_8h" local="yes">pp2/machine/goto/label.h</includes>
    <includes refid="invoke_8h" local="yes">pp2/primitive/basic/invoke.h</includes>
    <includes refid="open_8h" local="yes">pp2/primitive/tuple/open.h</includes>
    <includes refid="at_8h" local="yes">pp2/primitive/tuple/at.h</includes>
    <includedby refid="language_8h" local="yes">/github/workspace/include/pp2/language.h</includedby>
    <includedby refid="for_8h" local="yes">/github/workspace/include/pp2/language/statements/for.h</includedby>
    <incdepgraph>
      <node id="8">
        <label>pp2/language/basic/block.h</label>
        <link refid="block_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pp2/language/compiler.h</label>
        <link refid="compiler_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/github/workspace/include/pp2/language/statements/while.h</label>
        <link refid="while_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>pp2/machine/exception/throw.h</label>
        <link refid="throw_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>pp2/machine/goto/goto.h</label>
        <link refid="goto_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>pp2/machine/goto/label.h</label>
        <link refid="label_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>pp2/primitive/assoc/detail/find_tables.h</label>
        <link refid="find__tables_8h"/>
      </node>
      <node id="4">
        <label>pp2/primitive/assoc/find.h</label>
        <link refid="find_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>pp2/primitive/basic/invoke.h</label>
        <link refid="invoke_8h"/>
      </node>
      <node id="9">
        <label>pp2/primitive/punctuation/comma.h</label>
        <link refid="comma_8h"/>
      </node>
      <node id="6">
        <label>pp2/primitive/tuple/at.h</label>
        <link refid="at_8h"/>
      </node>
      <node id="7">
        <label>pp2/primitive/tuple/eat.h</label>
        <link refid="eat_8h"/>
      </node>
      <node id="12">
        <label>pp2/primitive/tuple/open.h</label>
        <link refid="open_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/github/workspace/include/pp2/language.h</label>
        <link refid="language_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/github/workspace/include/pp2/language/statements/for.h</label>
        <link refid="for_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/github/workspace/include/pp2/language/statements/while.h</label>
        <link refid="while_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/github/workspace/include/pp2/pp2.h</label>
        <link refid="pp2_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="while_8h_1a4667018498eafcfd5f0838258a2284e9" prot="public" static="no">
        <name>PP2_DEF_while</name>
        <param><defname>cond_stx</defname></param>
        <initializer>)PP2_COMPILE_LANGUAGE_WHILE(cond_stx,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/statements/while.h" line="15" column="9" bodyfile="/github/workspace/include/pp2/language/statements/while.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="while_8h_1a0f94cb92e4a3ad63fe6810f14adf6379" prot="public" static="no">
        <name>PP2_COMPILE_LANGUAGE_WHILE</name>
        <param><defname>cond_stx</defname></param>
        <param><defname>body_stx_tup</defname></param>
        <initializer>        8PP2_LANGUAGE_LOOP, \
        IP2_COMPILE_LANGUAGE_WHILE_MERGE_COND_AND_BODY_IF_PRESENT( \
            IP2_COMPILE_LANGUAGE_WHILE_TEST_IF_COND_OMITTED cond_stx () \
        )(,body_stx_tup,cond_stx)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/statements/while.h" line="17" column="9" bodyfile="/github/workspace/include/pp2/language/statements/while.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="while_8h_1a5c87c5549f539b2d63f80289f27f1b0a" prot="public" static="no">
        <name>IP2_COMPILE_LANGUAGE_WHILE_MERGE_COND_AND_BODY_IF_PRESENT</name>
        <param><defname>...</defname></param>
        <initializer>PP2_TUPLE_AT_1(,__VA_ARGS__,IP2_COMPILE_LANGUAGE_WHILE_CONDITIONAL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/statements/while.h" line="23" column="9" bodyfile="/github/workspace/include/pp2/language/statements/while.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="while_8h_1a479af39ef51693820706ae05d9fb1d63" prot="public" static="no">
        <name>IP2_COMPILE_LANGUAGE_WHILE_TEST_IF_COND_OMITTED</name>
        <param><defname>...</defname></param>
        <initializer>,IP2_COMPILE_LANGUAGE_WHILE_UNCONDITIONAL,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/statements/while.h" line="24" column="9" bodyfile="/github/workspace/include/pp2/language/statements/while.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="while_8h_1af2eed201c0dbc141d9bb42255e52031e" prot="public" static="no">
        <name>IP2_COMPILE_LANGUAGE_WHILE_CONDITIONAL</name>
        <param><defname>P</defname></param>
        <param><defname>body_stx_tup</defname></param>
        <param><defname>cond_stx</defname></param>
        <initializer>        ( \
         8PP2_LANGUAGE_COMPILE,P##cond_stx, \
         8PP2_LANGUAGE_WHILE_LOOP_BRANCH, \
         8PP2_LANGUAGE_BLOCK,P##body_stx_tup, \
         8PP2_GOTO,1, \
        )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/statements/while.h" line="25" column="9" bodyfile="/github/workspace/include/pp2/language/statements/while.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="while_8h_1a98cde49733ea5dd1fb226c092e3561f0" prot="public" static="no">
        <name>IP2_COMPILE_LANGUAGE_WHILE_UNCONDITIONAL</name>
        <param><defname>P</defname></param>
        <param><defname>body_stx_tup</defname></param>
        <param><defname>_</defname></param>
        <initializer>        ( \
         8PP2_LANGUAGE_BLOCK,P##body_stx_tup, \
         8PP2_GOTO,1, \
        )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/statements/while.h" line="32" column="9" bodyfile="/github/workspace/include/pp2/language/statements/while.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="while_8h_1afb9d24b6615f9356cf46112dc52b5437" prot="public" static="no">
        <name>PP2_INSN_8PP2_LANGUAGE_LOOP</name>
        <param><defname>P</defname></param>
        <param><defname>r0</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>body_stx_tup</defname></param>
        <param><defname>...</defname></param>
        <initializer>                                   (, \
                                    P##r0, \
                                    /*r1=*/IP2_FX(LANGUAGE_WHILE_LOOP_PUSH_LABELS, (P##body_stx_tup,(P##__VA_ARGS__),<ref refid="open_8h_1a4b438a51aa1b73bb331e7da86d375c13" kindref="member">PP2_OPEN</ref> P##r1)), \
                                    P##r2, \
                                    <ref refid="open_8h_1a4b438a51aa1b73bb331e7da86d375c13" kindref="member">PP2_OPEN</ref> P##body_stx_tup \
                                   )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/statements/while.h" line="39" column="9" bodyfile="/github/workspace/include/pp2/language/statements/while.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="while_8h_1a20181af822c4b3a130d8b1d8398d4fd5" prot="public" static="no">
        <name>IP2_LANGUAGE_WHILE_LOOP_PUSH_LABELS</name>
        <param><defname>body</defname></param>
        <param><defname>epilogue</defname></param>
        <param><defname>P</defname></param>
        <param><defname>stack</defname></param>
        <param><defname>labels</defname></param>
        <param><defname>...</defname></param>
        <initializer>(,P##stack,(,0,P##epilogue)(,1,P##body)P##labels,P##__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/statements/while.h" line="47" column="9" bodyfile="/github/workspace/include/pp2/language/statements/while.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="while_8h_1ac1f64a57a876796277e3f30425661b40" prot="public" static="no">
        <name>PP2_INSN_8PP2_LANGUAGE_WHILE_LOOP_BRANCH</name>
        <param><defname>P</defname></param>
        <param><defname>r0</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>...</defname></param>
        <initializer>                                                (, \
                                                 /*r0=*/,P##r1,P##r2, \
                                                 IP2_LANGUAGE_WHILE_LOOP_BRANCH_SELECT P##r0 (,P##__VA_ARGS__) \
                                                )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/statements/while.h" line="50" column="9" bodyfile="/github/workspace/include/pp2/language/statements/while.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="while_8h_1aa11e1a6e712de481227f3a6615c4896c" prot="public" static="no">
        <name>IP2_LANGUAGE_WHILE_LOOP_BRANCH_SELECT</name>
        <param><defname>obj_addr</defname></param>
        <param><defname>obj_type</defname></param>
        <param><defname>obj_value</defname></param>
        <initializer>IP2_LANGUAGE_WHILE_LOOP_BRANCH_##obj_value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/statements/while.h" line="56" column="9" bodyfile="/github/workspace/include/pp2/language/statements/while.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="while_8h_1ae8c6df10590e1f66bb134692eab63692" prot="public" static="no">
        <name>IP2_LANGUAGE_WHILE_LOOP_BRANCH_1</name>
        <param><defname>P</defname></param>
        <param><defname>...</defname></param>
        <initializer>P##__VA_ARGS__</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/statements/while.h" line="57" column="9" bodyfile="/github/workspace/include/pp2/language/statements/while.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="while_8h_1a8e409f4f7f4bc6df872b8998615565b2" prot="public" static="no">
        <name>IP2_LANGUAGE_WHILE_LOOP_BRANCH_0</name>
        <param><defname>P</defname></param>
        <param><defname>...</defname></param>
        <initializer>8PP2_GOTO,0,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/statements/while.h" line="58" column="9" bodyfile="/github/workspace/include/pp2/language/statements/while.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PP2_LANGUAGE_STATEMENTS_WHILE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_LANGUAGE_STATEMENTS_WHILE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pp2/language/compiler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="block_8h" kindref="compound">pp2/language/basic/block.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="goto_8h" kindref="compound">pp2/machine/goto/goto.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="label_8h" kindref="compound">pp2/machine/goto/label.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="invoke_8h" kindref="compound">pp2/primitive/basic/invoke.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="open_8h" kindref="compound">pp2/primitive/tuple/open.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="at_8h" kindref="compound">pp2/primitive/tuple/at.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_DEF_while(cond_stx)<sp/>)PP2_COMPILE_LANGUAGE_WHILE(cond_stx,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_COMPILE_LANGUAGE_WHILE(cond_stx,body_stx_tup)<sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8PP2_LANGUAGE_LOOP,<sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP2_COMPILE_LANGUAGE_WHILE_MERGE_COND_AND_BODY_IF_PRESENT(<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP2_COMPILE_LANGUAGE_WHILE_TEST_IF_COND_OMITTED<sp/>cond_stx<sp/>()<sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)(,body_stx_tup,cond_stx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_COMPILE_LANGUAGE_WHILE_MERGE_COND_AND_BODY_IF_PRESENT(...)<sp/>PP2_TUPLE_AT_1(,__VA_ARGS__,IP2_COMPILE_LANGUAGE_WHILE_CONDITIONAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_COMPILE_LANGUAGE_WHILE_TEST_IF_COND_OMITTED(...)<sp/>,IP2_COMPILE_LANGUAGE_WHILE_UNCONDITIONAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_COMPILE_LANGUAGE_WHILE_CONDITIONAL(P,body_stx_tup,cond_stx)<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8PP2_LANGUAGE_COMPILE,P##cond_stx,<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8PP2_LANGUAGE_WHILE_LOOP_BRANCH,<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8PP2_LANGUAGE_BLOCK,P##body_stx_tup,<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8PP2_GOTO,1,<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_COMPILE_LANGUAGE_WHILE_UNCONDITIONAL(P,body_stx_tup,_)<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8PP2_LANGUAGE_BLOCK,P##body_stx_tup,<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8PP2_GOTO,1,<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_INSN_8PP2_LANGUAGE_LOOP(P,r0,r1,r2,body_stx_tup,...)<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(,<sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P##r0,<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*r1=*/</highlight><highlight class="preprocessor">IP2_FX(LANGUAGE_WHILE_LOOP_PUSH_LABELS,<sp/>(P##body_stx_tup,(P##__VA_ARGS__),PP2_OPEN<sp/>P##r1)),<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P##r2,<sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PP2_OPEN<sp/>P##body_stx_tup<sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_WHILE_LOOP_PUSH_LABELS(body,epilogue,P,stack,labels,...)<sp/>(,P##stack,(,0,P##epilogue)(,1,P##body)P##labels,P##__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_INSN_8PP2_LANGUAGE_WHILE_LOOP_BRANCH(P,r0,r1,r2,...)<sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(,<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*r0=*/</highlight><highlight class="preprocessor">,P##r1,P##r2,<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP2_LANGUAGE_WHILE_LOOP_BRANCH_SELECT<sp/>P##r0<sp/>(,P##__VA_ARGS__)<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_WHILE_LOOP_BRANCH_SELECT(obj_addr,obj_type,obj_value)<sp/>IP2_LANGUAGE_WHILE_LOOP_BRANCH_##obj_value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_WHILE_LOOP_BRANCH_1(P,...)<sp/>P##__VA_ARGS__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_WHILE_LOOP_BRANCH_0(P,...)<sp/>8PP2_GOTO,0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/github/workspace/include/pp2/language/statements/while.h"/>
  </compounddef>
</doxygen>
