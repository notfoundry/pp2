<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="return_8h" kind="file" language="C++">
    <compoundname>return.h</compoundname>
    <includes refid="compiler_8h" local="yes">pp2/language/compiler.h</includes>
    <includes refid="object_8h" local="yes">pp2/language/basic/object.h</includes>
    <includes refid="context_8h" local="yes">pp2/machine/context.h</includes>
    <includes refid="throw_8h" local="yes">pp2/machine/exception/throw.h</includes>
    <includes refid="nop_8h" local="yes">pp2/machine/insns/nop.h</includes>
    <includes refid="invoke_8h" local="yes">pp2/primitive/basic/invoke.h</includes>
    <includes refid="open_8h" local="yes">pp2/primitive/tuple/open.h</includes>
    <includes refid="is__nil_8h" local="yes">pp2/primitive/introspection/is_nil.h</includes>
    <includedby refid="language_8h" local="yes">/github/workspace/include/pp2/language.h</includedby>
    <includedby refid="variable_8h" local="yes">/github/workspace/include/pp2/language/basic/variable.h</includedby>
    <includedby refid="const_8h" local="yes">/github/workspace/include/pp2/language/definition/const.h</includedby>
    <includedby refid="def_8h" local="yes">/github/workspace/include/pp2/language/definition/def.h</includedby>
    <includedby refid="vm__fn_8h" local="yes">/github/workspace/include/pp2/language/definition/vm_fn.h</includedby>
    <includedby refid="expressions_2fn_8h" local="yes">/github/workspace/include/pp2/language/expressions/fn.h</includedby>
    <includedby refid="print_8h" local="yes">/github/workspace/include/pp2/language/io/print.h</includedby>
    <includedby refid="put_8h" local="yes">/github/workspace/include/pp2/language/io/put.h</includedby>
    <includedby refid="any_8h" local="yes">/github/workspace/include/pp2/language/types/any.h</includedby>
    <includedby refid="types_2fn_8h" local="yes">/github/workspace/include/pp2/language/types/fn.h</includedby>
    <incdepgraph>
      <node id="8">
        <label>pp2/language/basic/object.h</label>
        <link refid="object_8h"/>
      </node>
      <node id="1">
        <label>/github/workspace/include/pp2/language/basic/return.h</label>
        <link refid="return_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pp2/language/compiler.h</label>
        <link refid="compiler_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>pp2/machine/context.h</label>
        <link refid="context_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>pp2/machine/exception/throw.h</label>
        <link refid="throw_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>pp2/machine/insns/nop.h</label>
        <link refid="nop_8h_source"/>
      </node>
      <node id="5">
        <label>pp2/primitive/assoc/detail/find_tables.h</label>
        <link refid="find__tables_8h"/>
      </node>
      <node id="4">
        <label>pp2/primitive/assoc/find.h</label>
        <link refid="find_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>pp2/primitive/basic/cat.h</label>
        <link refid="cat_8h"/>
      </node>
      <node id="11">
        <label>pp2/primitive/basic/invoke.h</label>
        <link refid="invoke_8h"/>
      </node>
      <node id="16">
        <label>pp2/primitive/control/if.h</label>
        <link refid="primitive_2control_2if_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>pp2/primitive/introspection/is_nil.h</label>
        <link refid="is__nil_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>pp2/primitive/introspection/is_tuple.h</label>
        <link refid="is__tuple_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>pp2/primitive/tuple/at.h</label>
        <link refid="at_8h"/>
      </node>
      <node id="7">
        <label>pp2/primitive/tuple/eat.h</label>
        <link refid="eat_8h"/>
      </node>
      <node id="12">
        <label>pp2/primitive/tuple/open.h</label>
        <link refid="open_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/github/workspace/include/pp2/language.h</label>
        <link refid="language_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/github/workspace/include/pp2/language/basic/return.h</label>
        <link refid="return_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/github/workspace/include/pp2/language/basic/variable.h</label>
        <link refid="variable_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/github/workspace/include/pp2/language/definition/const.h</label>
        <link refid="const_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/github/workspace/include/pp2/language/definition/def.h</label>
        <link refid="def_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/github/workspace/include/pp2/language/definition/type.h</label>
        <link refid="definition_2type_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/github/workspace/include/pp2/language/definition/vm_fn.h</label>
        <link refid="vm__fn_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/github/workspace/include/pp2/language/expressions/fn.h</label>
        <link refid="expressions_2fn_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/github/workspace/include/pp2/language/io/print.h</label>
        <link refid="print_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/github/workspace/include/pp2/language/io/put.h</label>
        <link refid="put_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/github/workspace/include/pp2/language/types/any.h</label>
        <link refid="any_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/github/workspace/include/pp2/language/types/bool.h</label>
        <link refid="bool_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/github/workspace/include/pp2/language/types/fn.h</label>
        <link refid="types_2fn_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/github/workspace/include/pp2/language/types/type.h</label>
        <link refid="types_2type_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/github/workspace/include/pp2/pp2.h</label>
        <link refid="pp2_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="return_8h_1ac3ba92d846f4e493f41f359ebb0458ea" prot="public" static="no">
        <name>PP2_COMPILE_LANGUAGE_RETURN</name>
        <param><defname>rhs_stx</defname></param>
        <initializer>        IP2_LANGUAGE_RETURN_CHOOSE_CALL_OR_METHOD(,rhs_stx,IP2_LANGUAGE_RETURN_TEST_IF_CALL rhs_stx), \
        rhs_stx</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="16" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1aa310e4087d443e6af6ea892c0009557e" prot="public" static="no">
        <name>PP2_INSN_8PP2_LANGUAGE_RETURN</name>
        <param><defname>P</defname></param>
        <param><defname>r0</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>method</defname></param>
        <param><defname>...</defname></param>
        <initializer>                                     (, \
                                      P##r0,P##r1,P##r2, \
                                      IP2_LANGUAGE_RETURN_CHOOSE_CALL_OR_METHOD(, \
                                          P##method,IP2_LANGUAGE_RETURN_TEST_IF_CALL P##method \
                                      ), \
                                      P##method, \
                                      P##__VA_ARGS__ \
                                     )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="20" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1a32044771044a02d850d7c5c697a46217" prot="public" static="no">
        <name>IP2_LANGUAGE_RETURN_CHOOSE_CALL_OR_METHOD</name>
        <param><defname>P</defname></param>
        <param><defname>method</defname></param>
        <param><defname>...</defname></param>
        <initializer>        IP2_LANGUAGE_RETURN_TUPLE_AT_1( \
            __VA_ARGS__, \
            IP2_LANGUAGE_RETURN_CHOOSE_METHOD_OR_RETURN(, \
                IP2_LANGUAGE_RETURN_TEST_IF_NOT_METHOD P##method () \
            ) \
        )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="30" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1a4efd43580d7139c2a5467658c555b137" prot="public" static="no">
        <name>IP2_LANGUAGE_RETURN_CHOOSE_METHOD_OR_RETURN</name>
        <param><defname>P</defname></param>
        <param><defname>...</defname></param>
        <initializer>        IP2_LANGUAGE_RETURN_TUPLE_AT_1( \
            __VA_ARGS__, \
            8PP2_LANGUAGE_METHOD_CALL \
        )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="37" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1af41f7adc2d411fc4d7e241ad8ac02a96" prot="public" static="no">
        <name>PP2_INSN_8IP2_LANGUAGE_RETURN_NOP</name>
        <param><defname>P</defname></param>
        <param><defname>r0</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>_</defname></param>
        <param><defname>...</defname></param>
        <initializer>(,P##r0,P##r1,P##r2,P##__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="43" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1ae8f90f7a1f4934aee0baf24efd297e6e" prot="public" static="no">
        <name>PP2_INSN_8PP2_LANGUAGE_METHOD_CALL</name>
        <param><defname>P</defname></param>
        <param><defname>r0</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>method</defname></param>
        <param><defname>...</defname></param>
        <initializer>(,P##r0,PP2_LOCAL_CTX_PUSH_ARGUMENT(P##r1,P##r0),P##r2,IP2_LANGUAGE_RETURN_METHOD_CALL(,P##r0,P##method),P##__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="44" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1a4abfc26fe7c92688c1b8ab74a2f7f369" prot="public" static="no">
        <name>PP2_INSN_8PP2_LANGUAGE_SELF_CALL</name>
        <param><defname>P</defname></param>
        <param><defname>r0</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>args_tup</defname></param>
        <param><defname>...</defname></param>
        <initializer>(,P##r0,PP2_LOCAL_CTX_PUSH_ARGUMENT(P##r1,P##r0),P##r2,IP2_LANGUAGE_RETURN_METHOD_CALL(,P##r0,call P##args_tup),P##__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="45" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1a3f1a36b398e16b685325d583765052ab" prot="public" static="no">
        <name>IP2_LANGUAGE_RETURN_TUPLE_AT_1</name>
        <param><defname>_</defname></param>
        <param><defname>insn</defname></param>
        <param><defname>...</defname></param>
        <initializer>insn</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="47" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1aeac871c0a4669ca6e19524cec89b2ef0" prot="public" static="no">
        <name>IP2_LANGUAGE_RETURN_TEST_IF_CALL</name>
        <param><defname>...</defname></param>
        <initializer>,8PP2_LANGUAGE_SELF_CALL,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="48" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1a4998d44644a1fdbb25a005df2cc8081a" prot="public" static="no">
        <name>IP2_LANGUAGE_RETURN_TEST_IF_NOT_METHOD</name>
        <param><defname>...</defname></param>
        <initializer>,8IP2_LANGUAGE_RETURN_NOP,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="49" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1a595399e72d973fb31bb2d2e7b1750518" prot="public" static="no">
        <name>IP2_LANGUAGE_RETURN_METHOD_CALL</name>
        <param><defname>P</defname></param>
        <param><defname>obj</defname></param>
        <param><defname>method</defname></param>
        <initializer>IP2_FX(LANGUAGE_RETURN_METHOD_CALL_STATIC, (,IP2_LANGUAGE_OBJECT_TYPE P##obj,P##method))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="52" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1aaa68cf04fa56e74c04a250f4f5d00a11" prot="public" static="no">
        <name>IP2_LANGUAGE_RETURN_METHOD_CALL_STATIC</name>
        <param><defname>P</defname></param>
        <param><defname>type</defname></param>
        <param><defname>method</defname></param>
        <initializer>PP2_COMPILE_OR_DEFAULT(type##_##method,(8IP2_LANGUAGE_RETURN_RESOLVE_INHERITED_METHOD,P##type,P##type,P##method))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="53" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1a23e2b4a6e2178e1c0c499382e97d34ca" prot="public" static="no">
        <name>IP2_LANGUAGE_RETURN_METHOD_CALL_INHERITED</name>
        <param><defname>P</defname></param>
        <param><defname>base_type</defname></param>
        <param><defname>type</defname></param>
        <param><defname>method</defname></param>
        <initializer>PP2_COMPILE_OR_DEFAULT(type##_##method,(8IP2_LANGUAGE_RETURN_RESOLVE_INHERITED_METHOD,P##base_type,P##type,P##method))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="54" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1a5559262f75a943f31964a16a5ad081e9" prot="public" static="no">
        <name>PP2_INSN_8IP2_LANGUAGE_RETURN_RESOLVE_INHERITED_METHOD</name>
        <param><defname>P</defname></param>
        <param><defname>r0</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>base_type</defname></param>
        <param><defname>type</defname></param>
        <param><defname>method</defname></param>
        <param><defname>...</defname></param>
        <initializer>                                                              (, \
                                                               P##r0,P##r1,P##r2, \
                                                               PP2_COMPILE_UNSAFE(P##type), \
                                                               8IP2_LANGUAGE_RETURN_INHERITED_METHOD_CALL,P##base_type,P##method, \
                                                               P##__VA_ARGS__ \
                                                              )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="56" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1a9a7f4780477ef85fd0d6bf04e906c6b1" prot="public" static="no">
        <name>PP2_INSN_8IP2_LANGUAGE_RETURN_INHERITED_METHOD_CALL</name>
        <param><defname>P</defname></param>
        <param><defname>r0</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>base_type</defname></param>
        <param><defname>method</defname></param>
        <param><defname>...</defname></param>
        <initializer>                                                           (, \
                                                            /*r0=*/,P##r1,P##r2, \
                                                            IP2_FX ( \
                                                                LANGUAGE_RETURN_INHERITED_METHOD_CALL_INVOKE, \
                                                                (,P##base_type,PP2_LANGUAGE_TYPE_SUPERTYPE_NAME P##r0,P##method) \
                                                            ), \
                                                            P##__VA_ARGS__ \
                                                           )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="64" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1a39cbbcd946c57a41e4b26567a55642ea" prot="public" static="no">
        <name>IP2_LANGUAGE_RETURN_INHERITED_METHOD_CALL_INVOKE</name>
        <param><defname>P</defname></param>
        <param><defname>type_name</defname></param>
        <param><defname>supertype_name</defname></param>
        <param><defname>method</defname></param>
        <initializer>        PP2_IS_NIL_NON_TUPLE (P##supertype_name) ( \
            IP2_LANGUAGE_RETURN_INHERITED_METHOD_CALL_FAIL(type_name##_##method), \
            IP2_LANGUAGE_RETURN_METHOD_CALL_INHERITED(,P##type_name,P##supertype_name,P##method) \
        )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="73" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1adc817cca817300168745ef641085c0ce" prot="public" static="no">
        <name>IP2_LANGUAGE_RETURN_INHERITED_METHOD_CALL_FAIL</name>
        <param><defname>stx</defname></param>
        <initializer>8PP2_THROW_EXCEPTION,8PP2_LANGUAGE_DEFINITION_EXCEPTION,stx</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="78" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1a2c907173625db03cc59ed05eaf4d3e43" prot="public" static="no">
        <name>PP2_LANGUAGE_TYPE_SUPERTYPE_NAME</name>
        <param><defname>type_addr</defname></param>
        <param><defname>type_type</defname></param>
        <param><defname>type_value</defname></param>
        <initializer>IP2_LANGUAGE_TYPE_SUPERTYPE_NAME_I type_value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="80" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="return_8h_1a6a884d79f48b7ee2fbeb730668f2cf2b" prot="public" static="no">
        <name>IP2_LANGUAGE_TYPE_SUPERTYPE_NAME_I</name>
        <param><defname>P</defname></param>
        <param><defname>type_name</defname></param>
        <param><defname>supertype_name</defname></param>
        <initializer>P##supertype_name</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/pp2/language/basic/return.h" line="81" column="9" bodyfile="/github/workspace/include/pp2/language/basic/return.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PP2_LANGUAGE_BASIC_RETURN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_LANGUAGE_BASIC_RETURN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pp2/language/compiler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="object_8h" kindref="compound">pp2/language/basic/object.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="context_8h" kindref="compound">pp2/machine/context.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="throw_8h" kindref="compound">pp2/machine/exception/throw.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pp2/machine/insns/nop.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="invoke_8h" kindref="compound">pp2/primitive/basic/invoke.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="open_8h" kindref="compound">pp2/primitive/tuple/open.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="is__nil_8h" kindref="compound">pp2/primitive/introspection/is_nil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_COMPILE_LANGUAGE_RETURN(rhs_stx)<sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP2_LANGUAGE_RETURN_CHOOSE_CALL_OR_METHOD(,rhs_stx,IP2_LANGUAGE_RETURN_TEST_IF_CALL<sp/>rhs_stx),<sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs_stx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_INSN_8PP2_LANGUAGE_RETURN(P,r0,r1,r2,method,...)<sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(,<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P##r0,P##r1,P##r2,<sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP2_LANGUAGE_RETURN_CHOOSE_CALL_OR_METHOD(,<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P##method,IP2_LANGUAGE_RETURN_TEST_IF_CALL<sp/>P##method<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P##method,<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P##__VA_ARGS__<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_RETURN_CHOOSE_CALL_OR_METHOD(P,method,...)<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP2_LANGUAGE_RETURN_TUPLE_AT_1(<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VA_ARGS__,<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP2_LANGUAGE_RETURN_CHOOSE_METHOD_OR_RETURN(,<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP2_LANGUAGE_RETURN_TEST_IF_NOT_METHOD<sp/>P##method<sp/>()<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_RETURN_CHOOSE_METHOD_OR_RETURN(P,...)<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP2_LANGUAGE_RETURN_TUPLE_AT_1(<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VA_ARGS__,<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8PP2_LANGUAGE_METHOD_CALL<sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_INSN_8IP2_LANGUAGE_RETURN_NOP(P,r0,r1,r2,_,...)<sp/>(,P##r0,P##r1,P##r2,P##__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_INSN_8PP2_LANGUAGE_METHOD_CALL(P,r0,r1,r2,method,...)<sp/>(,P##r0,PP2_LOCAL_CTX_PUSH_ARGUMENT(P##r1,P##r0),P##r2,IP2_LANGUAGE_RETURN_METHOD_CALL(,P##r0,P##method),P##__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_INSN_8PP2_LANGUAGE_SELF_CALL(P,r0,r1,r2,args_tup,...)<sp/>(,P##r0,PP2_LOCAL_CTX_PUSH_ARGUMENT(P##r1,P##r0),P##r2,IP2_LANGUAGE_RETURN_METHOD_CALL(,P##r0,call<sp/>P##args_tup),P##__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_RETURN_TUPLE_AT_1(_,insn,...)<sp/>insn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_RETURN_TEST_IF_CALL(...)<sp/>,8PP2_LANGUAGE_SELF_CALL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_RETURN_TEST_IF_NOT_METHOD(...)<sp/>,8IP2_LANGUAGE_RETURN_NOP,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_RETURN_METHOD_CALL(P,obj,method)<sp/>IP2_FX(LANGUAGE_RETURN_METHOD_CALL_STATIC,<sp/>(,IP2_LANGUAGE_OBJECT_TYPE<sp/>P##obj,P##method))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_RETURN_METHOD_CALL_STATIC(P,type,method)<sp/>PP2_COMPILE_OR_DEFAULT(type##_##method,(8IP2_LANGUAGE_RETURN_RESOLVE_INHERITED_METHOD,P##type,P##type,P##method))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_RETURN_METHOD_CALL_INHERITED(P,base_type,type,method)<sp/>PP2_COMPILE_OR_DEFAULT(type##_##method,(8IP2_LANGUAGE_RETURN_RESOLVE_INHERITED_METHOD,P##base_type,P##type,P##method))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_INSN_8IP2_LANGUAGE_RETURN_RESOLVE_INHERITED_METHOD(P,r0,r1,r2,base_type,type,method,...)<sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(,<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P##r0,P##r1,P##r2,<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PP2_COMPILE_UNSAFE(P##type),<sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8IP2_LANGUAGE_RETURN_INHERITED_METHOD_CALL,P##base_type,P##method,<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P##__VA_ARGS__<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_INSN_8IP2_LANGUAGE_RETURN_INHERITED_METHOD_CALL(P,r0,r1,r2,base_type,method,...)<sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(,<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*r0=*/</highlight><highlight class="preprocessor">,P##r1,P##r2,<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP2_FX<sp/>(<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LANGUAGE_RETURN_INHERITED_METHOD_CALL_INVOKE,<sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(,P##base_type,PP2_LANGUAGE_TYPE_SUPERTYPE_NAME<sp/>P##r0,P##method)<sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P##__VA_ARGS__<sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_RETURN_INHERITED_METHOD_CALL_INVOKE(P,type_name,supertype_name,method)<sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PP2_IS_NIL_NON_TUPLE<sp/>(P##supertype_name)<sp/>(<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP2_LANGUAGE_RETURN_INHERITED_METHOD_CALL_FAIL(type_name##_##method),<sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP2_LANGUAGE_RETURN_METHOD_CALL_INHERITED(,P##type_name,P##supertype_name,P##method)<sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_RETURN_INHERITED_METHOD_CALL_FAIL(stx)<sp/>8PP2_THROW_EXCEPTION,8PP2_LANGUAGE_DEFINITION_EXCEPTION,stx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP2_LANGUAGE_TYPE_SUPERTYPE_NAME(type_addr,type_type,type_value)<sp/>IP2_LANGUAGE_TYPE_SUPERTYPE_NAME_I<sp/>type_value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP2_LANGUAGE_TYPE_SUPERTYPE_NAME_I(P,type_name,supertype_name)<sp/>P##supertype_name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/github/workspace/include/pp2/language/basic/return.h"/>
  </compounddef>
</doxygen>
